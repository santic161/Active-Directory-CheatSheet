name: Deploy Dashboard to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Prepare docs before build
        run: |
          # Create a temporary docs directory in public/src folder if needed
          # This ensures docs are included in the build process
          if [ -d "docs" ] && [ -d "public" ]; then
            cp -r docs public/
          elif [ -d "docs" ] && [ -d "src" ]; then
            cp -r docs src/
          fi

      - name: Build application
        run: npm run build

      - name: Ensure docs in dist (fallback)
        run: |
          # Fallback: copy docs directly to dist if not included in build
          if [ -d "docs" ] && [ ! -d "dist/docs" ]; then
            mkdir -p dist/docs
            cp -r docs/* dist/docs/
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4